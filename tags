!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mcc/code/todo/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	/v6.2.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
ACTION_ALL	src/todo.c	/^    ACTION_ALL,$/;"	e	enum:TODO_ACTION	file:
ACTION_DONE	src/todo.c	/^    ACTION_DONE,$/;"	e	enum:TODO_ACTION	file:
ACTION_EDIT	src/todo.c	/^    ACTION_EDIT,$/;"	e	enum:TODO_ACTION	file:
ACTION_HELP	src/todo.c	/^    ACTION_HELP,$/;"	e	enum:TODO_ACTION	file:
ACTION_MARK	src/todo.c	/^    ACTION_MARK,$/;"	e	enum:TODO_ACTION	file:
ACTION_NEW	src/todo.c	/^    ACTION_NEW$/;"	e	enum:TODO_ACTION	file:
ACTION_NONE	src/todo.c	/^    ACTION_NONE,$/;"	e	enum:TODO_ACTION	file:
ACTION_STDIN	src/todo.c	/^    ACTION_STDIN,$/;"	e	enum:TODO_ACTION	file:
ACTION_TODO	src/todo.c	/^    ACTION_TODO,$/;"	e	enum:TODO_ACTION	file:
ACTION_UNMARK	src/todo.c	/^    ACTION_UNMARK,$/;"	e	enum:TODO_ACTION	file:
ACTION_VERSION	src/todo.c	/^    ACTION_VERSION,$/;"	e	enum:TODO_ACTION	file:
FLAG_ALL_LONG	src/todo.c	/^#define FLAG_ALL_LONG /;"	d	file:
FLAG_ALL_SHORT	src/todo.c	/^#define FLAG_ALL_SHORT /;"	d	file:
FLAG_DONE_LONG	src/todo.c	/^#define FLAG_DONE_LONG /;"	d	file:
FLAG_DONE_SHORT	src/todo.c	/^#define FLAG_DONE_SHORT /;"	d	file:
FLAG_EDIT_LONG	src/todo.c	/^#define FLAG_EDIT_LONG /;"	d	file:
FLAG_EDIT_SHORT	src/todo.c	/^#define FLAG_EDIT_SHORT /;"	d	file:
FLAG_HELP_LONG	src/todo.c	/^#define FLAG_HELP_LONG /;"	d	file:
FLAG_HELP_SHORT	src/todo.c	/^#define FLAG_HELP_SHORT /;"	d	file:
FLAG_MARK_LONG	src/todo.c	/^#define FLAG_MARK_LONG /;"	d	file:
FLAG_MARK_SHORT	src/todo.c	/^#define FLAG_MARK_SHORT /;"	d	file:
FLAG_NEW_LONG	src/todo.c	/^#define FLAG_NEW_LONG /;"	d	file:
FLAG_NEW_SHORT	src/todo.c	/^#define FLAG_NEW_SHORT /;"	d	file:
FLAG_STDIN	src/todo.c	/^#define FLAG_STDIN /;"	d	file:
FLAG_TODO_LONG	src/todo.c	/^#define FLAG_TODO_LONG /;"	d	file:
FLAG_TODO_SHORT	src/todo.c	/^#define FLAG_TODO_SHORT /;"	d	file:
FLAG_UNMARK_LONG	src/todo.c	/^#define FLAG_UNMARK_LONG /;"	d	file:
FLAG_UNMARK_SHORT	src/todo.c	/^#define FLAG_UNMARK_SHORT /;"	d	file:
FLAG_VERSION_LONG	src/todo.c	/^#define FLAG_VERSION_LONG /;"	d	file:
FLAG_VERSION_SHORT	src/todo.c	/^#define FLAG_VERSION_SHORT /;"	d	file:
TODO_ACTION	src/todo.c	/^enum TODO_ACTION$/;"	g	file:
TODO_CHAR_MARK_DONE	src/todo.c	/^#define TODO_CHAR_MARK_DONE /;"	d	file:
TODO_CHAR_MARK_TODO	src/todo.c	/^#define TODO_CHAR_MARK_TODO /;"	d	file:
TODO_DEFAULT_PRINT_NUM	src/todo.c	/^#define TODO_DEFAULT_PRINT_NUM /;"	d	file:
TODO_MAX_ITEMLINES	src/todo.c	/^#define TODO_MAX_ITEMLINES /;"	d	file:
TODO_VERSION	src/todo.c	/^#define TODO_VERSION /;"	d	file:
add_line	src/todo.c	/^void add_line(char *line)$/;"	f	typeref:typename:void
atoi_pedantic	src/todo.c	/^unsigned int atoi_pedantic(char *str)$/;"	f	typeref:typename:unsigned int
edit_todo_file	src/todo.c	/^void edit_todo_file()$/;"	f	typeref:typename:void
file_exists	src/todo.c	/^bool file_exists(char *file_path)$/;"	f	typeref:typename:bool
input_numeric_parse	src/todo.c	/^int input_numeric_parse(char *primary, char *fallback, int *fallback_ticker)$/;"	f	typeref:typename:int
input_option_parse	src/todo.c	/^enum TODO_ACTION input_option_parse(char *option)$/;"	f	typeref:enum:TODO_ACTION
input_stdin	src/todo.c	/^void input_stdin()$/;"	f	typeref:typename:void
line_is_done	src/todo.c	/^bool line_is_done(char *line)$/;"	f	typeref:typename:bool
line_is_todo	src/todo.c	/^bool line_is_todo(char *line)$/;"	f	typeref:typename:bool
main	src/todo.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
mark_line	src/todo.c	/^void mark_line(enum TODO_ACTION action, int target_line_num)$/;"	f	typeref:typename:void
print_error	src/todo.c	/^void print_error(const char *message, ...)$/;"	f	typeref:typename:void
print_help	src/todo.c	/^void print_help()$/;"	f	typeref:typename:void
print_lines	src/todo.c	/^void print_lines(enum TODO_ACTION action, int max_lines)$/;"	f	typeref:typename:void
print_version	src/todo.c	/^void print_version()$/;"	f	typeref:typename:void
print_with_filter	src/todo.c	/^void print_with_filter(bool (*line_test)(char *line), int max_lines)$/;"	f	typeref:typename:void
todo_file	src/todo.c	/^FILE *todo_file(char *mode)$/;"	f	typeref:typename:FILE *
todo_path	src/todo.c	/^char *todo_path()$/;"	f	typeref:typename:char *
